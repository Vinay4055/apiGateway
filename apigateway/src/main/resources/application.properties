
zuul.routes.serviceReceiver.path=/serviceReceiver/**
zuul.routes.serviceReceiver.service-id=serviceReceiver
zuul.routes.serviceReceiver.stripPrefix=false 

zuul.routes.serviceRequest.path=/serviceRequest/**
zuul.routes.serviceRequest.service-id=serviceReceiver
zuul.routes.serviceRequest.stripPrefix=false

zuul.routes.authorizationService.path=/authorizationService/**
zuul.routes.authorizationService.service-id=authorizationService
zuul.routes.authorizationService.stripPrefix=false 
 
zuul.routes.serviceProvided.path=/serviceProvided/**
zuul.routes.serviceProvided.service-id=serviceProvided
zuul.routes.serviceProvided.stripPrefix=false 

zuul.routes.serviceProvider.path=/serviceProvider/**
zuul.routes.serviceProvider.service-id=serviceProvider
zuul.routes.serviceProvider.stripPrefix=false

zuul.routes.manageServiceRequest.path=/manageServiceRequest/**
zuul.routes.manageServiceRequest.service-id=manageServiceRequest
zuul.routes.manageServiceRequest.stripPrefix=false

zuul.routes.cancelServiceRequest.path=/cancelServiceRequest/**
zuul.routes.cancelServiceRequest.service-id=manageServiceRequest
zuul.routes.cancelServiceRequest.stripPrefix=false

#Ribbon is auto integrated with Zuul and for this exercise we are not using that.
#ribbon.eureka.enabled=true

#Will start the gateway server @8080
server.port=9999


spring.application.name=apigateway
opentracing.jaeger.udp-sender.host=localhost
opentracing.jaeger.udp-sender.port=6831
management.endpoints.web.exposure.include=*

eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}